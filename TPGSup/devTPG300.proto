Terminator = '\r\n';
ReplyTimeout = 2000;

#How TPG300 comms work:
#First send a command (e.g. ask for the pressure) then the device will return ACK.
#Then send ENQ to get the actual value.

#According to the streamdevice manual, once an "out" is sent access to the
#device is exclusively locked until the WHOLE protocol is finished.
#This should mean that we do not need to worry about commands interrupting each other

getPressure {
    out "\$1";
    in ACK;
	out ENQ;
    in "%*d,%f";
}

getUnits {
    out "UNI";
	in ACK;
	out ENQ;
    in "%{1|2|3}";
}

setUnits {
    #UNI,1 = mbar
    #UNI,2 = Torr
    #UNI,3 = Pa
    out "UNI,%{1|2|3}";
	in ACK;
	out ENQ;
    in "%{1|2|3}";
}

getFunction {
    out "SP\$1";
    in ACK;
    out ENQ;
    in "%(\$2:LOW:SP:RBV:RAW.A)E,%(\$2:HIGH:SP:RBV:RAW.A)E,%(\$2:ASSIGN:SP:RBV:RAW.A)i";
}

getFunctionMacro {
    out "SP%(\$1)s";
    in ACK;
    out ENQ;
    in "%(\$2:LOW:SP:RBV:RAW.A)E,%(\$2:HIGH:SP:RBV:RAW.A)E,%(\$2:ASSIGN:SP:RBV:RAW.A)i";
}

#The device requires the values we send to all have exponents, but does not allow leading zeroes on them, so we strip them with some regex post-processing
setFunction {
    out "SP%(\$1)s,%(\$1\$2).1E,%(\$1\$3).1E,%(\$1\$4)d%#/E(\+|-)0(\d)/E\1\2/";
    in ACK;
    out ENQ;
    in "%s";
}

getFunctionsStatus {
    out "SPS";
    in ACK;
    out ENQ;
    in "%(\$1:1:RB:RAW.A){0|1},%(\$1:2:RB:RAW.A){0|1},%(\$1:3:RB:RAW.A){0|1},%(\$1:4:RB:RAW.A){0|1},%*{0|1},%*{0|1}";
}
